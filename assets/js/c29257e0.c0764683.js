"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=m(n),c=a,f=d["".concat(s,".").concat(c)]||d[c]||u[c]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3095:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},i="Web Assembly",l={unversionedId:"tutorial-extras/web-assembly",id:"tutorial-extras/web-assembly",title:"Web Assembly",description:"What?",source:"@site/docs/tutorial-extras/web-assembly.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/web-assembly",permalink:"/docs/tutorial-extras/web-assembly",draft:!1,editUrl:"https://github.com/Josh-McFarlin/remix-image/tree/master/docs/templates/shared/docs/tutorial-extras/web-assembly.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Sharp",permalink:"/docs/tutorial-extras/sharp"},next:{title:"Cloudflare",permalink:"/docs/tutorial-extras/cloudflare"}},s={},m=[{value:"What?",id:"what",level:2},{value:"Install",id:"install",level:2},{value:"Add To Your Loader Config",id:"add-to-your-loader-config",level:2},{value:"Add Wasm Files To Your Environment",id:"add-wasm-files-to-your-environment",level:2},{value:"Cloudflare:",id:"cloudflare",level:3},{value:"Reducing Bundle Size",id:"reducing-bundle-size",level:3},{value:"Example",id:"example",level:3}],p={toc:m};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"web-assembly"},"Web Assembly"),(0,a.kt)("h2",{id:"what"},"What?"),(0,a.kt)("p",null,"Web Assembly is a faster image transformer that offers performance between the ",(0,a.kt)("inlineCode",{parentName:"p"},"pureTransformer")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"sharpTransformer"),"."),(0,a.kt)("p",null,"However, because Web Assembly uses additional code and setup, it must be installed separately."),(0,a.kt)("p",null,"If you would like to use Web Assembly, follow the steps below:"),(0,a.kt)("h2",{id:"install"},"Install"),(0,a.kt)("p",null,"If you want to use a faster image transformer, install:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -S remix-image-wasm\nyarn add remix-image-wasm\n")),(0,a.kt)("h2",{id:"add-to-your-loader-config"},"Add To Your Loader Config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},'import type { LoaderFunction } from "remix";\nimport { imageLoader, DiskCache, MemoryCache } from "remix-image/server";\nimport { wasmTransformer } from "remix-image-wasm";\n\nconst config = {\n  selfUrl: "http://localhost:3000",\n  cache: new DiskCache(),\n  transformer: wasmTransformer\n};\n\nexport const loader: LoaderFunction = ({ request }) => {\n  return imageLoader(config, request);\n};\n')),(0,a.kt)("p",null,"For an example project using Web Assembly, look at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Josh-McFarlin/remix-image/tree/master/examples/cloudflare-workers"},"this example"),"."),(0,a.kt)("h2",{id:"add-wasm-files-to-your-environment"},"Add Wasm Files To Your Environment"),(0,a.kt)("h3",{id:"cloudflare"},"Cloudflare:"),(0,a.kt)("p",null,"Add the following lines to the bottom of your ",(0,a.kt)("inlineCode",{parentName:"p"},"wrangler.toml")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[wasm_modules]\nJPEG_ENC_WASM = "node_modules/remix-image-wasm/jpeg_enc.wasm"\nJPEG_DEC_WASM = "node_modules/remix-image-wasm/jpeg_dec.wasm"\nPNG_WASM = "node_modules/remix-image-wasm/png.wasm"\nWEBP_ENC_WASM = "node_modules/remix-image-wasm/webp_enc.wasm"\nWEBP_DEC_WASM = "node_modules/remix-image-wasm/webp_dec.wasm"\n# AVIF_ENC_WASM = "node_modules/remix-image-wasm/avif_enc.wasm"    # uncomment for AVIF support\n# AVIF_DEC_WASM = "node_modules/remix-image-wasm/avif_dec.wasm"    # uncomment for AVIF support\n')),(0,a.kt)("h3",{id:"reducing-bundle-size"},"Reducing Bundle Size"),(0,a.kt)("p",null,"Going over the Cloudflare Worker file size limit?"),(0,a.kt)("p",null,"You can solve this by only including the ",(0,a.kt)("inlineCode",{parentName:"p"},".wasm")," files for image types you want to speed up transformation for."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Files ending with ",(0,a.kt)("inlineCode",{parentName:"li"},"_dec.wasm")," are used for  image inputs"),(0,a.kt)("li",{parentName:"ul"},"Files ending with ",(0,a.kt)("inlineCode",{parentName:"li"},"_enc.wasm")," are used for image outputs")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note"),": An exception is PNG, which uses a single ",(0,a.kt)("inlineCode",{parentName:"p"},"png.wasm")," for image inputs and outputs."),(0,a.kt)("p",null,"If an input image is in a format that you haven\u2019t included the ",(0,a.kt)("inlineCode",{parentName:"p"},".wasm")," files for in your environment,\nit will use the ",(0,a.kt)("inlineCode",{parentName:"p"},"fallbackTransformer")," option, which is ",(0,a.kt)("inlineCode",{parentName:"p"},"pureTransformer"),"\nby default and supports JPEG, PNG, GIF, BMP, and TIFF images."),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,"Let\u2019s say we have a project that uses images that are JPEGs, PNGs, and WEBPs.\nWe want our faster ",(0,a.kt)("inlineCode",{parentName:"p"},"wasmTransformer")," to handle our PNG\u2192PNG, WEBP\u2192WEBP, and PNG\u2192WEBP transformations,\nwhile letting any JPEG transformations (JPEG\u2192JPEG, JPEG\u2192PNG, PNG\u2192JPEG, etc) be handled by the built-in ",(0,a.kt)("inlineCode",{parentName:"p"},"pureTransformer"),"\nso we don\u2019t have to include the large ",(0,a.kt)("inlineCode",{parentName:"p"},"JPEG_DEC.wasm")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"JPEG_ENC.wasm")," files in our bundled project."),(0,a.kt)("p",null,"Therefore, we want our ",(0,a.kt)("inlineCode",{parentName:"p"},"supportedInputs")," to be:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"MimeType.PNG"),(0,a.kt)("li",{parentName:"ul"},"MimeType.WEBP")),(0,a.kt)("p",null,"And our ",(0,a.kt)("inlineCode",{parentName:"p"},"supportedOutputs")," to be:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"MimeType.PNG"),(0,a.kt)("li",{parentName:"ul"},"MimeType.WEBP")),(0,a.kt)("p",null,"Which we can do by setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"[wasm_modules]")," field in the ",(0,a.kt)("inlineCode",{parentName:"p"},"wrangler.toml")," file to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[wasm_modules]\nPNG_WASM = "node_modules/remix-image-wasm/png.wasm"\nWEBP_ENC_WASM = "node_modules/remix-image-wasm/webp_enc.wasm"\nWEBP_DEC_WASM = "node_modules/remix-image-wasm/webp_dec.wasm"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"pureTransformer")," does not include any support for WEBP inputs or outputs.\nIf you do not include ",(0,a.kt)("inlineCode",{parentName:"p"},"WEBP_DEC.wasm")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"WEBP_ENC.wasm")," in your environment, your WEBP images will not be transformed by Remix-Image."))}u.isMDXComponent=!0}}]);