"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[614],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>f});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=n.createContext({}),c=function(e){var r=n.useContext(m),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=c(e.components);return n.createElement(m.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,m=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(t),f=a,d=u["".concat(m,".").concat(f)]||u[f]||p[f]||o;return t?n.createElement(d,i(i({ref:r},l),{},{components:t})):n.createElement(d,i({ref:r},l))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var m in r)hasOwnProperty.call(r,m)&&(s[m]=r[m]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3247:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>m,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const o={sidebar_position:3},i="Creating a Transformer",s={unversionedId:"advanced/creating-a-transformer",id:"advanced/creating-a-transformer",title:"Creating a Transformer",description:"You may want to create a Transformer if you want to modify images in a way that is not currently supported by this library.",source:"@site/docs/advanced/creating-a-transformer.md",sourceDirName:"advanced",slug:"/advanced/creating-a-transformer",permalink:"/docs/advanced/creating-a-transformer",draft:!1,editUrl:"https://github.com/Josh-McFarlin/remix-image/tree/master/docs/templates/shared/docs/advanced/creating-a-transformer.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Creating a Resolver",permalink:"/docs/advanced/creating-a-resolver"},next:{title:"Loader",permalink:"/docs/loader"}},m={},c=[{value:"Instructions",id:"instructions",level:2},{value:"Examples",id:"examples",level:2},{value:"Show Off",id:"show-off",level:2}],l={toc:c};function p(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creating-a-transformer"},"Creating a Transformer"),(0,a.kt)("p",null,"You may want to create a Transformer if you want to ",(0,a.kt)("strong",{parentName:"p"},"modify")," images in a way that is not currently supported by this library.\nAn example could be resizing images using Cloudinary or Cloudflare Images."),(0,a.kt)("h2",{id:"instructions"},"Instructions"),(0,a.kt)("p",null,"To make your own, just make a class that follows the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Josh-McFarlin/remix-image/blob/master/packages/remix-image/src/types/transformer.ts"},"Transformer format"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export type Transformer = {\n  name: string;\n  supportedInputs: Set<MimeType>;\n  supportedOutputs: Set<MimeType>;\n  fallbackOutput: MimeType;\n  transform: (\n    input: {\n      url: string;\n      data: Uint8Array;\n      contentType: MimeType;\n    },\n    output: TransformOptions\n  ) => Promise<Uint8Array>;\n};\n")),(0,a.kt)("p",null,"You will then provide this object to the ",(0,a.kt)("inlineCode",{parentName:"p"},"transformer")," field of the \u2018loader\u2019 config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},'import type { LoaderFunction } from "remix";\nimport { imageLoader } from "remix-image/server";\nimport myTransformer from "...";\n\nconst config = {\n  selfUrl: "http://localhost:3000",\n  whitelistedDomains: ["i.imgur.com"],\n  transformer: myTransformer,\n};\n\nexport const loader: LoaderFunction = ({ request }) => {\n  return imageLoader(config, request);\n};\n')),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Josh-McFarlin/remix-image/tree/master/packages/remix-image-sharp"},"Sharp")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Josh-McFarlin/remix-image/tree/master/packages/remix-image-wasm"},"WebAssembly"))),(0,a.kt)("h2",{id:"show-off"},"Show Off"),(0,a.kt)("p",null,"Create something cool that you think others would use? Upload it to GitHub and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Josh-McFarlin/remix-image/discussions/3"},"show it off on the Remix-Image repo"),"!"))}p.isMDXComponent=!0}}]);