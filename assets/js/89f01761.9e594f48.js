"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[722],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),u=l(r),h=n,d=u["".concat(s,".").concat(h)]||u[h]||p[h]||o;return r?a.createElement(d,i(i({ref:t},m),{},{components:r})):a.createElement(d,i({ref:t},m))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2983:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:1},i="Creating a Cache",c={unversionedId:"advanced/creating-a-cache",id:"advanced/creating-a-cache",title:"Creating a Cache",description:"You may want to create a Cache if you want to store transformed images on the server in a way that is not currently supported by this library.",source:"@site/docs/advanced/creating-a-cache.md",sourceDirName:"advanced",slug:"/advanced/creating-a-cache",permalink:"/docs/advanced/creating-a-cache",draft:!1,editUrl:"https://github.com/Josh-McFarlin/remix-image/tree/master/docs/templates/shared/docs/advanced/creating-a-cache.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Cloudflare",permalink:"/docs/tutorial-extras/cloudflare"},next:{title:"Creating a Resolver",permalink:"/docs/advanced/creating-a-resolver"}},s={},l=[{value:"Instructions",id:"instructions",level:2},{value:"Examples",id:"examples",level:2},{value:"Show Off",id:"show-off",level:2}],m={toc:l};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"creating-a-cache"},"Creating a Cache"),(0,n.kt)("p",null,"You may want to create a Cache if you want to ",(0,n.kt)("strong",{parentName:"p"},"store")," transformed images on the server in a way that is not currently supported by this library.\nAn example could be storing images in a Cloud storage provider such as AWS S3 or Google Cloud Storage."),(0,n.kt)("h2",{id:"instructions"},"Instructions"),(0,n.kt)("p",null,"To make your own, just make a class that follows the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Josh-McFarlin/remix-image/blob/master/packages/remix-image/src/types/cache.ts"},"Cache format"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'export interface CacheConfig {\n  /**\n   * Time To Live: how long a key should remain in the cache\n   */\n  ttl: number;\n  /**\n   * Time Before Deletion: how long a key should remain in the cache after expired (ttl)\n   */\n  tbd: number;\n}\n\nexport enum CacheStatus {\n  /**\n   * The cache contains the key and it has not yet expired\n   */\n  HIT = "hit",\n  /**\n   * The cache contains the key but it has expired\n   */\n  STALE = "stale",\n  /**\n   * The cache does not contain the key\n   */\n  MISS = "miss",\n}\n\nexport abstract class Cache {\n  abstract config: CacheConfig;\n\n  abstract has(key: string): Promise<boolean>;\n\n  abstract status(key: string): Promise<CacheStatus>;\n\n  abstract get(key: string): Promise<Uint8Array | null>;\n\n  abstract set(key: string, resultImg: Uint8Array): Promise<void>;\n\n  abstract clear(): Promise<void>;\n}\n')),(0,n.kt)("p",null,"You will then provide an instance of this class to the ",(0,n.kt)("inlineCode",{parentName:"p"},"cache")," field of the \u2018loader\u2019 config"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},'import type { LoaderFunction } from "remix";\nimport { imageLoader } from "remix-image/server";\nimport MyCache from "...";\n\nconst config = {\n  selfUrl: "http://localhost:3000",\n  whitelistedDomains: ["i.imgur.com"],\n  cache: new MyCache(),\n};\n\nexport const loader: LoaderFunction = ({ request }) => {\n  return imageLoader(config, request);\n};\n')),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Josh-McFarlin/remix-image/tree/master/packages/remix-image/src/server/caches/diskCache"},"diskCache")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Josh-McFarlin/remix-image/tree/master/packages/remix-image/src/server/caches/memoryCache"},"memoryCache"))),(0,n.kt)("h2",{id:"show-off"},"Show Off"),(0,n.kt)("p",null,"Create something cool that you think others would use? Upload it to GitHub and ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Josh-McFarlin/remix-image/discussions/3"},"show it off on the Remix-Image repo"),"!"))}p.isMDXComponent=!0}}]);