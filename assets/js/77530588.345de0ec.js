"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[614],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return f}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(t),f=a,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||o;return t?n.createElement(d,i(i({ref:r},p),{},{components:t})):n.createElement(d,i({ref:r},p))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3247:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],s={sidebar_position:3},c="Creating a Transformer",l={unversionedId:"advanced/creating-a-transformer",id:"advanced/creating-a-transformer",title:"Creating a Transformer",description:"You may want to create a Transformer if you want to modify images in a way that is not currently supported by this library.",source:"@site/docs/advanced/creating-a-transformer.md",sourceDirName:"advanced",slug:"/advanced/creating-a-transformer",permalink:"/docs/advanced/creating-a-transformer",editUrl:"https://github.com/Josh-McFarlin/remix-image/tree/master/docs/templates/shared/docs/advanced/creating-a-transformer.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Creating a Resolver",permalink:"/docs/advanced/creating-a-resolver"},next:{title:"Loader",permalink:"/docs/loader"}},p=[{value:"Instructions",id:"instructions",children:[],level:2},{value:"Example",id:"example",children:[],level:2},{value:"Show Off",id:"show-off",children:[],level:2}],u={toc:p};function m(e){var r=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"creating-a-transformer"},"Creating a Transformer"),(0,o.kt)("p",null,"You may want to create a Transformer if you want to ",(0,o.kt)("strong",{parentName:"p"},"modify")," images in a way that is not currently supported by this library.\nAn example could be resizing images using Cloudinary or Cloudflare Images."),(0,o.kt)("h2",{id:"instructions"},"Instructions"),(0,o.kt)("p",null,"To make your own, just make a class that follows the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Josh-McFarlin/remix-image/blob/master/src/types/transformer.ts"},"Transformer format"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { JpegOptions, PngOptions, ResizeOptions, WebpOptions } from "sharp";\n\nexport abstract class ImageTransformer {\n  abstract jpeg(options?: JpegOptions): this;\n  abstract png(options?: PngOptions): this;\n  abstract webp(options?: WebpOptions): this;\n\n  abstract resize(options: ResizeOptions): this;\n  abstract toBuffer(): Promise<Buffer>;\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note"),": Transformers use Buffer, a default Node package that is not available on platforms like Cloudflare Workers.\nIf you would like to use your custom transformer on these platforms, you will need to polyfill your custom transformer using a library like ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/buffer"},(0,o.kt)("inlineCode",{parentName:"a"},"buffer")),"."),(0,o.kt)("p",null,"Then make a function that takes in a buffer as the single parameter, and creates an instance of your Transformer class"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export type TransformerMaker = (buffer: Buffer) => ImageTransformer;\n")),(0,o.kt)("p",null,"You will then provide this function to the \u2018transformer\u2019 field of the \u2018loader\u2019 config"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},'import type { LoaderFunction } from "remix";\nimport { imageLoader } from "remix-image/server";\nimport myTransformer from "...";\n\nconst config = {\n  selfUrl: "http://localhost:3000",\n  whitelistedDomains: ["i.imgur.com"],\n  transformer: myTransformer,\n};\n\nexport const loader: LoaderFunction = ({ request }) => {\n  return imageLoader(config, request);\n};\n')),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"To see an example, look at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Josh-McFarlin/remix-image/tree/master/src/server/transformers/pureTransformer"},(0,o.kt)("inlineCode",{parentName:"a"},"pureTransformer"))," in the library."),(0,o.kt)("h2",{id:"show-off"},"Show Off"),(0,o.kt)("p",null,"Create something cool that you think others would use? Upload it to GitHub and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Josh-McFarlin/remix-image/discussions/3"},"show it off on the Remix-Image repo"),"!"))}m.isMDXComponent=!0}}]);